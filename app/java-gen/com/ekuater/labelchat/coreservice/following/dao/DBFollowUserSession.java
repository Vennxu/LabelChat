package com.ekuater.labelchat.coreservice.following.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.ekuater.labelchat.coreservice.following.dao.DBFollowingUser;
import com.ekuater.labelchat.coreservice.following.dao.DBFollowerUser;

import com.ekuater.labelchat.coreservice.following.dao.DBFollowingUserDao;
import com.ekuater.labelchat.coreservice.following.dao.DBFollowerUserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DBFollowUserSession extends AbstractDaoSession {

    private final DaoConfig dBFollowingUserDaoConfig;
    private final DaoConfig dBFollowerUserDaoConfig;

    private final DBFollowingUserDao dBFollowingUserDao;
    private final DBFollowerUserDao dBFollowerUserDao;

    public DBFollowUserSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBFollowingUserDaoConfig = daoConfigMap.get(DBFollowingUserDao.class).clone();
        dBFollowingUserDaoConfig.initIdentityScope(type);

        dBFollowerUserDaoConfig = daoConfigMap.get(DBFollowerUserDao.class).clone();
        dBFollowerUserDaoConfig.initIdentityScope(type);

        dBFollowingUserDao = new DBFollowingUserDao(dBFollowingUserDaoConfig, this);
        dBFollowerUserDao = new DBFollowerUserDao(dBFollowerUserDaoConfig, this);

        registerDao(DBFollowingUser.class, dBFollowingUserDao);
        registerDao(DBFollowerUser.class, dBFollowerUserDao);
    }
    
    public void clear() {
        dBFollowingUserDaoConfig.getIdentityScope().clear();
        dBFollowerUserDaoConfig.getIdentityScope().clear();
    }

    public DBFollowingUserDao getDBFollowingUserDao() {
        return dBFollowingUserDao;
    }

    public DBFollowerUserDao getDBFollowerUserDao() {
        return dBFollowerUserDao;
    }

}
